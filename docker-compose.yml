version: "3.8"
services:
  laravel:
    build:
      args:
        user: ${USER}
        uid: 1000
      context: .
      dockerfile: ./Dockerfile
      target: laravel
    command: sh -c "./wait-for-it.sh mysql:3306 -t 30 && ./wait-for-it.sh redis:6379 -t 30 && composer install && php-fpm"
    restart: unless-stopped
    volumes:
      - ./app:/usr/src/app
      - ./config:/usr/src/config
      - ./database:/usr/src/database
      - ./public:/usr/src/public
      - ./resources:/usr/src/resources
      - ./routes:/usr/src/routes
      - ./storage:/usr/src/storage
      - ./tests:/usr/src/tests
      - ./composer.json:/usr/src/composer.json
      - ./composer.lock:/usr/src/composer.lock
      - ./phpunit.xml:/usr/src/phpunit.xml
      - ./vite.config.js:/usr/src/vite.config.js
      - ./.env:/usr/src/.env
      - ./docker/php-fpm/php-dev.ini:/usr/local/etc/php/conf.d/php.ini
    depends_on:
      - update
      - mysql
      - redis

  schedules:
    build:
      args:
        user: ${USER}
        uid: 1000
      context: .
      dockerfile: ./Dockerfile
      target: scheduler
    restart: unless-stopped
    volumes:
      - ./app:/usr/src/app
      - ./config:/usr/src/config
      - ./database:/usr/src/database
      - ./routes:/usr/src/routes
      - ./storage:/usr/src/storage
      - ./tests:/usr/src/tests
      - ./composer.json:/usr/src/composer.json
      - ./composer.lock:/usr/src/composer.lock
      - ./.env:/usr/src/.env
    depends_on:
      - update
      - mysql
      - redis

  worker:
    build:
      args:
        user: ${USER}
        uid: 1000
      context: .
      dockerfile: ./Dockerfile
      target: worker
    restart: unless-stopped
    volumes:
      - ./app:/usr/src/app
      - ./config:/usr/src/config
      - ./database:/usr/src/database
      - ./routes:/usr/src/routes
      - ./storage:/usr/src/storage
      - ./tests:/usr/src/tests
      - ./composer.json:/usr/src/composer.json
      - ./composer.lock:/usr/src/composer.lock
      - ./.env:/usr/src/.env
    depends_on:
      - update
      - mysql
      - redis

  nginx:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/usr/src/
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/certs/zforum.zstrikke.local.crt:/etc/nginx/certs/zforum.zstrikke.local.crt
      - ./docker/certs/zforum.zstrikke.local.key:/etc/nginx/certs/zforum.zstrikke.local.key
    depends_on:
      - laravel
  
  mysql:
    build:
      args:
        password: ${DB_PASSWORD}
      context: .
      dockerfile: ./docker/Dockerfile.mysql
    restart: unless-stopped
    volumes:
      - ./docker/mysqldata:/var/lib/mysql
    ports:
      - "33060:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}

  redis:
    image: redis:7.0.11-alpine
    restart: unless-stopped
    volumes:
      - ./docker/redisdata:/data
    ports:
      - "63790:6379"

  update:
    build:
      args:
        user: ${USER}
        uid: 1000
      context: .
      dockerfile: ./Dockerfile
    command: sh -c "./wait-for-it.sh mysql:3306 -t 30 && ./update.sh"
    restart: no
    volumes:
      - ./composer.json:/usr/src/composer.json
      - ./composer.lock:/usr/src/composer.lock
      - ./.env:/usr/src/.env
      - ./docker/bin/update.sh:/usr/src/update.sh
    depends_on:
      - mysql